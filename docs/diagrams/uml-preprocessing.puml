@startuml Preprocessing API

class OpenApiDownloader{
    +downLoadOpenApi(String url): JSON
}

class Tokenizer{
    +getTokens(String nlpSentence) : List<Token> 
}

class PreprocessingOrchestrator {
    -openApiDownloader: OpenApiDownloader
    -InformationExctractor: InformationExctractor
    +preprocess(String url, String nlpSentence) : PreprocessingResult
}

class PreprocessingFunction {
	-PreprocessingOrchestrator : PreprocessingOrchestrator
	+preprocessNaturalLanguage (HttpRequest request) : HttpResponse
}

class InformationExctractor{
    -tokenizer : TokenizingService
    +getAllInfo(String sentence): SentenceInfo
}

class PreprocessingResult{
    -openAPIDocument: JSON
    -sentenceInfo: SentenceInfo
    -sentence: String
}

class SentenceInfo{
    -tokens: List<Token>
    -verb: Token
    -method: String
    -target_resource: Token
    -resource_parent: Token
    -possible_params: List<Token>
    -sentence: String
}

class Token{
    -id: Number
    -start: Number
    -end: Number
    -partOfSpeech: String
    -head: Number
    -lemma: String
}

PreprocessingFunction --> PreprocessingOrchestrator 

PreprocessingOrchestrator --> OpenApiDownloader
PreprocessingOrchestrator --> InformationExctractor
PreprocessingOrchestrator -- PreprocessingResult
InformationExctractor --> Tokenizer
InformationExctractor -- SentenceInfo
Tokenizer -- Token
SentenceInfo -- Token
@enduml